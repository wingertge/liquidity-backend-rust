initSidebarItems({"macro":[["derive_traits_for_trackable_error_newtype","Implements the typical traits for a newtype $error of `TrackableError<$kind>`."],["track","Tries to track the current location into the history of the `$target`."],["track_any_err","The abbreviation of `track!($target.map_err(Failure::from_error), ..)`."],["track_assert","Error trackable variant of the standard `assert!` macro."],["track_assert_eq","Error trackable variant of the standard `assert_ne!` macro."],["track_assert_ne","Error trackable variant of the standard `assert_ne!` macro."],["track_assert_some","Trackable assertion for `Option` values."],["track_err","The abbreviation of `$target.map_err(|e| track!(e, ..))`."],["track_panic","Error trackable variant of the standard `panic!` macro."],["track_try_unwrap","More human readable variant of the standard `Result::unwrap` method."]],"mod":[["error","Functionalities for implementing trackable errors and operating on those."],["result","Trackable [`Result`] types for main and test functions."]],"struct":[["History","The tracking history of a target."],["Location","The location of interest in source code files."]],"trait":[["Trackable","This trait allows to track an instance of an implementation type."]]});